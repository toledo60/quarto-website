{
  "hash": "5d3d534b231adefb00bb02ceb9d3ad64",
  "result": {
    "markdown": "---\nauthor: Jose Toledo Luna\ndate: '2023-04-11'\ntitle: Introduction to Streamlit\ndescription: Simple EDA application\ntoc: true\nexecute:\n  warning: false\ncomments: false\n---\n\n## Installing Streamlit\n\nYou can follow the official [installation guide](https://docs.streamlit.io/library/get-started/installation) if you prefer using [virtual environments](https://code.visualstudio.com/docs/python/environments)\n\nThis guide assumes global installation\n\nOn Windows use `pip` and on macOS use `pip3`\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\npip install streamlit\n```\n:::\n\n\n<details>\n<summary>Location of Packages</summary>\nIf you want to know where your packages are installed run the command \n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\npip show PACKAGE_NAME | grep Location\n```\n:::\n\n\nFor example, \n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\npip show numpy | grep Location\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLocation: /Users/toledo60/opt/anaconda3/lib/python3.9/site-packages\r\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNote: you may need to restart the kernel to use updated packages.\n```\n:::\n:::\n\n\n</details>\n\n## Structure of Project\n\nWe will use VScode throughout this tutorial. First create a folder with an appropriate name, in your desired destination. I will create a folder called `simple_app` in my `Desktop` directory.\n\nNext, we initialize a git repository to upload our project to Github so streamlit can obtain access to it later on. We will need a `README.md` to give a quick overview of the project, and a `.gitignore` file to specify unnecessary files not to track\n\nLastly, the contents of our app will be on `main.py` *(or whatever file name you want to call it)*. Our project structure should then look something like this\n\n```\nDesktop/\n  simple_app/\n    main.py\n    requirements.txt\n    README.md\n    .gitignore\n```\n\n---\n\n### Main Application\n\nIn our `main.py` file is where we put all of the code required to create our streamlit application\n\n\n### .gitignore\n\nIn our `.gitignore` we usually have the following *(but not limited to)*\n\n```\n__pycache__\n.DS_Store\n.streamlit/\n.vscode/\n```\n\n### Requirements\n\nYou will need a `requirements.txt` file in your project to let streamlit know which packages were used *(this is where a virtual environment is useful)*. Let's say we used `numpy`, `pandas`, `streamlit`, and `matplotlib`. To check the version used for each of these packages run the following command\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\npip show PACKAGE_NAME | grep Version\n```\n:::\n\n\nFor example,\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\npip show numpy | grep Version\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVersion: 1.21.5\r\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNote: you may need to restart the kernel to use updated packages.\n```\n:::\n:::\n\n\nSo in our `requirements.txt` file we will add the entry\n\n> numpy >= 1.21.5\n\nWe repeat the process for all of the packages used in our streamlit application\n\n",
    "supporting": [
      "02-streamlit_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}