{
  "hash": "ad9daf8c686f80a2b2b88a5bb5a09533",
  "result": {
    "markdown": "---\nauthor: Jose Toledo Luna\ndate: '2023-04-11'\ntitle: Introduction to Streamlit\ndescription: Simple EDA application\ntoc: true\ncomments: false\n---\n\n## Overview of Project\n\nThe goal of this project is for you to create a simple exploratory data analysis application (EDA). You will do so using the [streamlit](https://streamlit.io) framework\n\nThe structure of the EDA application is as follows:\n\n- Have a [file uploader button ](https://docs.streamlit.io/library/api-reference/widgets/st.file_uploader) which allows you to upload your own `csv` file\n- Once the `csv` file has been uploaded display relevant statistics about the dataset, such as: number of rows, number of columns, how many categorical/numerical/bool variables are there *(other information you can think of, optional)*\n\n- An appropriate [input widget](https://docs.streamlit.io/library/api-reference/widgets) to select a **single** column from the dataset. *(If you are a looking for a challenge select multiple columns, optional)*\n\n- Once the chosen column has been selected, if the column is numerical display in a table the [five number summary](https://en.wikipedia.org/wiki/Five-number_summary), create a distribution plot using matplotlib/seaborn. The plot should be highly customized, I recommend [The Python Graph Gallery](https://www.python-graph-gallery.com) for examples and inspiration \n\n- If the column selected is categorical, display in a table the proportions of each category level, and create a customized barplot\n\n\nI leave the customization of your streamlit application up to you. For example, the layout, theme, single or multiple pages, etc..\n\n## Setting up your project\n\nWe will use VScode throughout this tutorial. First create a folder with an appropriate name, in your desired destination. I will create a folder called `simple_EDA_app` in my `Desktop` directory\n\n\n\n\n## Installing Streamlit\n\nYou can follow the official [installation guide](https://docs.streamlit.io/library/get-started/installation) if you prefer using virtual environments\n\nThis guide assumes global installation\n\nOn windows:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\npip install streamlit\n```\n:::\n\n\nOn macOS:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\npip install streamlit\n```\n:::\n\n\nor \n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\npip3 install streamlit\n```\n:::\n\n\n## Requirements\n\nYou will need a `requirements.txt` files in your project to let streamlit know which packages were used *(this is where a virtual environment is useful)*.\nWe used `numpy`, `pandas`, `streamlit`, `matplotlib`, to check the version used for each of these packages run the following command \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\npip show PACKAGE_NAME | grep Version\n```\n:::\n\n\nFor example,\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\npip show numpy | grep Version\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nVersion: 1.21.5\r\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nNote: you may need to restart the kernel to use updated packages.\n```\n:::\n:::\n\n\nSo in our `requirements.txt` file we will add the entry\n\n\n> numpy >= 1.21.5\n\n",
    "supporting": [
      "02-streamlit_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}