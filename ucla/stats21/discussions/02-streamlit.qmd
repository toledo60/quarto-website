---
author: Jose Toledo Luna
date: 2023-04-11
title: Introduction to Streamlit
description:  Simple EDA application
toc: true
jupyter: python3
execute:
  warning: false
comments: false
---


## Installing Streamlit

You can follow the official [installation guide](https://docs.streamlit.io/library/get-started/installation) if you prefer using [virtual environments](https://code.visualstudio.com/docs/python/environments)

This guide assumes global installation

On Windows use `pip` and on macOS use `pip3`

```{python}
#| eval: false
pip install streamlit
```

<details>
<summary>Location of Packages</summary>
If you want to know where your packages are installed run the command 

```{python}
#| eval: false
pip show PACKAGE_NAME | grep Location
```

For example, 

```{python}
pip show numpy | grep Location
```

</details>

## Structure of Project

We will use VScode throughout this tutorial. First create a folder with an appropriate name, in your desired destination. I will create a folder called `simple_app` in my `Desktop` directory.

Next, we initialize a git repository to upload our project to Github so streamlit can obtain access to it later on. We will need a `README.md` to give a quick overview of the project, and a `.gitignore` file to specify unnecessary files not to track

Lastly, the contents of our app will be on `main.py` *(or whatever file name you want to call it)*. Our project structure should then look something like this

```
Desktop/
  simple_app/
    main.py
    requirements.txt
    README.md
    .gitignore
```
---

### Main Application

In our `main.py` file is where we put all of the code required to create our streamlit application


### .gitignore

In our `.gitignore` we usually have the following *(but not limited to)*

```
__pycache__
.DS_Store
.streamlit/
.vscode/
```

### Requirements

You will need a `requirements.txt` file in your project to let streamlit know which packages were used *(this is where a virtual environment is useful)*. Let's say we used `numpy`, `pandas`, `streamlit`, and `matplotlib`. To check the version used for each of these packages run the following command

```{python}
#| eval: false
pip show PACKAGE_NAME | grep Version
```

For example,

```{python}
pip show numpy | grep Version
```

So in our `requirements.txt` file we will add the entry

> numpy >= 1.21.5

We repeat the process for all of the packages used in our streamlit application
























