---
toc: true
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  comment = "#>",
  fig.width = 6,
  fig.height = 4,
  eval = TRUE
)
```

```{r, echo=FALSE}
birth_dat <- read.csv(file="/Users/toledo60/Desktop/Projects/personal-website/ucla/stats10/data/births.csv")
```


In this lab you will learn the fundamentals of programming in R. Start by reading over the following tutorials in order.

1. [Fundamentals of R](/ucla/stats10/fundamentals.qmd)
2. [Importing Data in R](/ucla/stats10/importing_data.qmd)

Once you've learned to properly import data into R, lets take a quick look at the `births` dataset located in our class website

## Overview of Births Dataset

The `births` dataset is a sample of information about babies born in North Carolina. It is considered a data frame because it contains numeric information about each baby, as well as various pieces of categorical data such as the race of the parents, and whether the parents had a smoking habit.

```{r, eval=FALSE}
birth_dat <- read.csv(file="/Users/toledo60/Desktop/Projects/personal-website/ucla/stats10/data/births.csv")
```

```{r,eval=FALSE}
birth_dat
```


```{r,echo=FALSE}
birth_dat |> head(5)
```

We can view the structure of our dataset using `str()` function

```{r}
str(birth_dat) 
```

There are 1992 rows and 21 columns, and we can see the datatypes for each variable *(column)*. Those with `int` are considered numerical variables and those with `chr` are considered categorical variables.

*Note:* While looking at the structure of the data using `str()` we primarily saw two types of variables: `chr` and `int` to denote character and integer data types, respectively. However we can also have `factor` and `double`.

`factor` will be considered as a categorical variable and `double` would be considered as a numerical variable.

We can use the `$` operator to access values from a data frame column. For example, if we want to extract the values from the `Gender` column from our dataset, we run the following command

```{r,eval=FALSE}
birth_dat$Gender
```

```{r,echo=FALSE}
birth_dat$Gender[1:8]
```

If we save these values into a variable we will be able to manipulate them without altering the dataset itself.

```{r}
genders <- birth_dat$Gender
```


## Exploratory Data Analysis

Once you have a solid understanding of the fundamental concepts, we can proceed with performing exploratory data analysis. Exploratory data analysis (EDA) is a statistical approach to analyzing data sets that involves summarizing the features of both numerical and categorical data using various data visualization methods.

Below are tutorials for working with numerical and categorical data

- [Summarizing and Visualzing Numerical Data](/ucla/stats10/intro_numerical_variables.qmd)
- [Summarizing and Visualzing Categorical Data](/ucla/stats10/intro_categorical_variables.qmd)

Both of these tutorials utilize the `births` dataset mentioned previously, but they are not interdependent. You can read either tutorial in any order without affecting your ability to understand the content



